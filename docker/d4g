#!/bin/bash
set -e

# edit here
export DOCKER_USER='zootinge'

# Fork the merkatorgis/docker4gis repo and set the environment variable
# to the docker4gis/base directory
export DOCKER_BASE=~/Documents/GitHub/docker4gis/base

# Either empty for Docker Hub
# or eg docker.merkator.com/ (including the trailing slash)
export DOCKER_REGISTRY="${DOCKER_REGISTRY}"

export DOCKER_ENV=DEVELOPMENT

action="${1:-start}"
shift 1

export NETWORK_NAME="${DOCKER_USER}-net"
export DOCKER_BINDS_DIR="${DOCKER_BASE}/../binds"

export POSTGIS_CONTAINER="${DOCKER_USER}-pg"
export API_CONTAINER="${DOCKER_USER}-api"
export GEOSERVER_CONTAINER="${DOCKER_USER}-gs"
export MAPFISH_CONTAINER="${DOCKER_USER}-mf"
export POSTFIX_CONTAINER="${DOCKER_USER}-pf"
export CRON_CONTAINER="${DOCKER_USER}-cr"
export APP_CONTAINER="${DOCKER_USER}-app"
export PROXY_CONTAINER="${DOCKER_USER}-px"

export PROXY_HOST='localhost.merkator.com'
export PROXY_PORT="${PROXY_PORT:-7443}"
export APP="${APP}"
export API="${API}"

export MSYS_NO_PATHCONV=1

if [ "${action}" == 'build' ]; then
	# Examples:
	# ./ex build app
	# ./ex build run
	# ./ex tag 627 app
	# APP_TAG=627 ./ex build run 38
	# ./ex build api; ./ex br app
	export POSTGIS_TAG="${POSTGIS_TAG}"
	export API_TAG="${API_TAG}"
	export GEOSERVER_TAG="${GEOSERVER_TAG}"
	export MAPFISH_TAG="${MAPFISH_TAG}"
	export POSTFIX_TAG="${POSTFIX_TAG}"
	export CRON_TAG="${CRON_TAG}"
	export APP_TAG="${APP_TAG}"
	export PROXY_TAG="${PROXY_TAG}"
	"${DOCKER_BASE}/build.sh" "$0" "$@"
elif [ "${action}" == 'run' ]; then
	# Examples:
	# ./ex run
	# ./ex run 38
	"${DOCKER_BASE}/run.sh" "$0" "$@"
elif [ "${action}" == 'br' ]; then
	# Examples:
	# ./ex br app
	# ./ex br postgis
	# ./ex br run
	"$0" build "${1}"
	"$0" run
elif [ "${action}" == 'stop' ]; then
	"${DOCKER_BASE}/stop.sh" "${PROXY_CONTAINER}"
	"${DOCKER_BASE}/stop.sh" "${APP_CONTAINER}"
	"${DOCKER_BASE}/stop.sh" "${CRON_CONTAINER}"
	"${DOCKER_BASE}/stop.sh" "${POSTFIX_CONTAINER}"
	"${DOCKER_BASE}/stop.sh" "${MAPFISH_CONTAINER}"
	"${DOCKER_BASE}/stop.sh" "${GEOSERVER_CONTAINER}"
	"${DOCKER_BASE}/stop.sh" "${API_CONTAINER}"
	"${DOCKER_BASE}/stop.sh" "${POSTGIS_CONTAINER}"
elif [ "${action}" == 'latest' ]; then
	"${DOCKER_BASE}/latest.sh" postgis "${POSTGIS_CONTAINER}"
	"${DOCKER_BASE}/latest.sh" api "${API_CONTAINER}"
	"${DOCKER_BASE}/latest.sh" geoserver "${GEOSERVER_CONTAINER}"
	"${DOCKER_BASE}/latest.sh" mapfish "${MAPFISH_CONTAINER}"
	"${DOCKER_BASE}/latest.sh" postfix "${POSTFIX_CONTAINER}"
	"${DOCKER_BASE}/latest.sh" cron "${CRON_CONTAINER}"
	"${DOCKER_BASE}/latest.sh" app "${APP_CONTAINER}"
	"${DOCKER_BASE}/latest.sh" proxy "${PROXY_CONTAINER}"
	"${DOCKER_BASE}/latest.sh" run no_container

	"$0" run
elif [ "${action}" == 'binds' ]; then
	# Examples:
	# ls -la $(./ex binds)
	echo "${DOCKER_BINDS_DIR}"
elif [ "${action}" == 'tag' ]; then
	# Labels latest with the specified tag
	# Examples:
	# ./ex tag 627 app
	# ./ex tag -push 12 postgis
	"${DOCKER_BASE}/tag.sh" "$@"
elif [ "${action}" == 'push' ]; then
	# Pushes the specified tag AND latest to the registry
	# Examples:
	# ./ex push 38 run
	"${DOCKER_BASE}/push.sh" "$@"
else
	echo "Unknown action: ${action}"
fi
